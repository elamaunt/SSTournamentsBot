//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSTournamentsBot.Api.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class S {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal S() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SSTournamentsBot.Api.Resources.S", typeof(S).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} Your vote has been counted.
        /// </summary>
        public static string AcceptVote_Accepted {
            get {
                return ResourceManager.GetString("AcceptVote_Accepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} You have already voted.
        /// </summary>
        public static string AcceptVote_AlreadyAccepted {
            get {
                return ResourceManager.GetString("AcceptVote_AlreadyAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} Error during request processing.
        /// </summary>
        public static string AcceptVote_Error {
            get {
                return ResourceManager.GetString("AcceptVote_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} concludes the vote with the administration&apos;s vote.
        /// </summary>
        public static string AcceptVote_ForcedByAdmin {
            get {
                return ResourceManager.GetString("AcceptVote_ForcedByAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} You have no right to participate in this vote.
        /// </summary>
        public static string AcceptVote_NoPermission {
            get {
                return ResourceManager.GetString("AcceptVote_NoPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} Voting is not taking place now.
        /// </summary>
        public static string AcceptVote_NoVoting {
            get {
                return ResourceManager.GetString("AcceptVote_NoVoting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} Voting has already ended.
        /// </summary>
        public static string AcceptVote_VotingEnded {
            get {
                return ResourceManager.GetString("AcceptVote_VotingEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The next event &apos;**{0}**&apos; is postponed to **{1}**.
        /// </summary>
        public static string AddTime_NextEventDelayed {
            get {
                return ResourceManager.GetString("AddTime_NextEventDelayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The next event &apos;**{0}**&apos; is accelerated by -**{1}**.
        /// </summary>
        public static string AddTime_NextEventSpeedUp {
            get {
                return ResourceManager.GetString("AddTime_NextEventSpeedUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; There are no scheduled events right now..
        /// </summary>
        public static string AddTime_NoEvents {
            get {
                return ResourceManager.GetString("AddTime_NoEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; No change in the time of the next event because 0 minutes is specified..
        /// </summary>
        public static string AddTime_NoMinutes {
            get {
                return ResourceManager.GetString("AddTime_NoMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Your ban list has been successfully updated, but the changes will only be taken into account in future tournaments..
        /// </summary>
        public static string BanMaps_MapsUpdatedButForNextTournaments {
            get {
                return ResourceManager.GetString("BanMaps_MapsUpdatedButForNextTournaments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Your ban list has been successfully updated..
        /// </summary>
        public static string BanMaps_UpdatedSuccessfully {
            get {
                return ResourceManager.GetString("BanMaps_UpdatedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is kicked from the activity..
        /// </summary>
        public static string BanPlayer_Kicked {
            get {
                return ResourceManager.GetString("BanPlayer_Kicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Binding of the account is completed successfully. Welcome to participate in competitive bot activities. Execute the __**/play repeatedly**__ command on the channel of the event of interest to register..
        /// </summary>
        public static string Bot_AccountRegisteredSuccessfully {
            get {
                return ResourceManager.GetString("Bot_AccountRegisteredSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;h1&gt;SS Tournaments Bot by elamaunt&lt;/h1&gt;&lt;br/&gt;&lt;p&gt;Account linking completed successfully. Welcome to tournaments! Repeat the play command on the tournament channel in Discord to sign up.&lt;/p&gt;.
        /// </summary>
        public static string Bot_AccountRegisteredSuccessfullyHtml {
            get {
                return ResourceManager.GetString("Bot_AccountRegisteredSuccessfullyHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You have already left this activity..
        /// </summary>
        public static string Bot_AreAlreadyLeftTheEvent {
            get {
                return ResourceManager.GetString("Bot_AreAlreadyLeftTheEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You were not registered..
        /// </summary>
        public static string Bot_AreNotregisteredInEvent {
            get {
                return ResourceManager.GetString("Bot_AreNotregisteredInEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This command has not yet been implemented..
        /// </summary>
        public static string Bot_CommandNotImplemented {
            get {
                return ResourceManager.GetString("Bot_CommandNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Failed to update the data in the database..
        /// </summary>
        public static string Bot_DataBaseUpdateError {
            get {
                return ResourceManager.GetString("Bot_DataBaseUpdateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hello friends! 
        ///**SS Tournaments Bot** is at your service and ready to hold events for you.
        ///Use **/slash** commands to register for them.
        ///Have fun playing!.
        /// </summary>
        public static string Bot_Greetings {
            get {
                return ResourceManager.GetString("Bot_Greetings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Failed to update the data in the database..
        /// </summary>
        public static string Bot_ImposibleToUpdateDataBase {
            get {
                return ResourceManager.GetString("Bot_ImposibleToUpdateDataBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; No activity..
        /// </summary>
        public static string Bot_NoActiveTournament {
            get {
                return ResourceManager.GetString("Bot_NoActiveTournament", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There are no scheduled events right now..
        /// </summary>
        public static string Bot_NoEvents {
            get {
                return ResourceManager.GetString("Bot_NoEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Such a user does not exist..
        /// </summary>
        public static string Bot_NoUserInDataBase {
            get {
                return ResourceManager.GetString("Bot_NoUserInDataBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Such a SteamId is already registered to another user..
        /// </summary>
        public static string Bot_SteamIdAlreadyUsedHtml {
            get {
                return ResourceManager.GetString("Bot_SteamIdAlreadyUsedHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;p&gt;Your user information could not be loaded, or the SteamId was not detected.&lt;/p&gt;.
        /// </summary>
        public static string Bot_SteamIdNotFoundHtml {
            get {
                return ResourceManager.GetString("Bot_SteamIdNotFoundHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; At this point, activity is already underway..
        /// </summary>
        public static string Bot_TournamentInProgress {
            get {
                return ResourceManager.GetString("Bot_TournamentInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; Activity has not yet begun..
        /// </summary>
        public static string Bot_TournamentNotStartedYet {
            get {
                return ResourceManager.GetString("Bot_TournamentNotStartedYet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown command &apos;{0}&apos;..
        /// </summary>
        public static string Bot_UnknownCommand {
            get {
                return ResourceManager.GetString("Bot_UnknownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You are not registered in the system..
        /// </summary>
        public static string Bot_YouAreNotRegistered {
            get {
                return ResourceManager.GetString("Bot_YouAreNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Your opponent with the nickname **{0}** is summoned via private messages..
        /// </summary>
        public static string Call_CalledSuccessfully {
            get {
                return ResourceManager.GetString("Call_CalledSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; A player with the nickname {0} calls you to start a match. Please contact him in the chat activity channel..
        /// </summary>
        public static string Call_DirectMessageText {
            get {
                return ResourceManager.GetString("Call_DirectMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; An error occurred when calling a player.
        /// </summary>
        public static string Call_Error {
            get {
                return ResourceManager.GetString("Call_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; Your opponent with the nickname **{0}** cannot be called. He may have left the server. \n&gt;&gt;&gt; He will be given a technical defeat..
        /// </summary>
        public static string Call_ImposibleToComply {
            get {
                return ResourceManager.GetString("Call_ImposibleToComply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; At this point your opponent has not yet been identified..
        /// </summary>
        public static string Call_NoOpponent {
            get {
                return ResourceManager.GetString("Call_NoOpponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; {0} is excluded from the tournament because it is unavailable..
        /// </summary>
        public static string Call_UserKickedFromTournament {
            get {
                return ResourceManager.GetString("Call_UserKickedFromTournament", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You have no active matches at the moment..
        /// </summary>
        public static string Call_YouHaveNotActiveMatches {
            get {
                return ResourceManager.GetString("Call_YouHaveNotActiveMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You have successfully confirmed your participation!.
        /// </summary>
        public static string CheckIn_CheckInedSuccessfully {
            get {
                return ResourceManager.GetString("CheckIn_CheckInedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; There was an error.
        /// </summary>
        public static string CheckIn_Error {
            get {
                return ResourceManager.GetString("CheckIn_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; There is no checkin at this time..
        /// </summary>
        public static string CheckIn_NotActiveNow {
            get {
                return ResourceManager.GetString("CheckIn_NotActiveNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You have already confirmed your participation..
        /// </summary>
        public static string CheckIn_YouAreAlreadyCheckined {
            get {
                return ResourceManager.GetString("CheckIn_YouAreAlreadyCheckined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You are not logged in. Use the */play* command..
        /// </summary>
        public static string CheckIn_YouAreNotRegisteredInTheSystem {
            get {
                return ResourceManager.GetString("CheckIn_YouAreNotRegisteredInTheSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You did not register for the current activity..
        /// </summary>
        public static string CheckIn_YouAreNotRegisteredInTournament {
            get {
                return ResourceManager.GetString("CheckIn_YouAreNotRegisteredInTournament", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Throw bots in the tournament (for tests).
        /// </summary>
        public static string Commands_AddBots {
            get {
                return ResourceManager.GetString("Commands_AddBots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delays or speeds up the next event (for admins).
        /// </summary>
        public static string Commands_AddTime {
            get {
                return ResourceManager.GetString("Commands_AddTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Permanently ban maps in your matches.
        /// </summary>
        public static string Commands_BanMaps {
            get {
                return ResourceManager.GetString("Commands_BanMaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ban player.
        /// </summary>
        public static string Commands_BanPlayer {
            get {
                return ResourceManager.GetString("Commands_BanPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Call your opponent to the game.
        /// </summary>
        public static string Commands_Call {
            get {
                return ResourceManager.GetString("Commands_Call", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm your participation.
        /// </summary>
        public static string Commands_Checkin {
            get {
                return ResourceManager.GetString("Commands_Checkin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checkin all bots from the tournament (for tests).
        /// </summary>
        public static string Commands_CheckInBots {
            get {
                return ResourceManager.GetString("Commands_CheckInBots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deletes user profile (for admins).
        /// </summary>
        public static string Commands_DeleteUser {
            get {
                return ResourceManager.GetString("Commands_DeleteUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset the current state of the tournament (for admins).
        /// </summary>
        public static string Commands_Drop {
            get {
                return ResourceManager.GetString("Commands_Drop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ends active matches with bots by losing one of the bots (for tests).
        /// </summary>
        public static string Commands_ForceBotMatches {
            get {
                return ResourceManager.GetString("Commands_ForceBotMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Forces the following event (for admins).
        /// </summary>
        public static string Commands_ForceEvent {
            get {
                return ResourceManager.GetString("Commands_ForceEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get current information about the next event.
        /// </summary>
        public static string Commands_Info {
            get {
                return ResourceManager.GetString("Commands_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exclude bot from the tournament (for tests).
        /// </summary>
        public static string Commands_KickBot {
            get {
                return ResourceManager.GetString("Commands_KickBot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exclude all bots from the tournament (for tests).
        /// </summary>
        public static string Commands_KickBots {
            get {
                return ResourceManager.GetString("Commands_KickBots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exclude a player from the tournament.
        /// </summary>
        public static string Commands_KickPlayer {
            get {
                return ResourceManager.GetString("Commands_KickPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Leave the activity or exclude yourself from registration.
        /// </summary>
        public static string Commands_Leave {
            get {
                return ResourceManager.GetString("Commands_Leave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Output the list of active matches.
        /// </summary>
        public static string Commands_Matches {
            get {
                return ResourceManager.GetString("Commands_Matches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Outputs your discord user id.
        /// </summary>
        public static string Commands_MyId {
            get {
                return ResourceManager.GetString("Commands_MyId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Register for an activity or change your race.
        /// </summary>
        public static string Commands_Play {
            get {
                return ResourceManager.GetString("Commands_Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display a list of registered players.
        /// </summary>
        public static string Commands_Players {
            get {
                return ResourceManager.GetString("Commands_Players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display a list of users with a rating (for admins).
        /// </summary>
        public static string Commands_RatedUsers {
            get {
                return ResourceManager.GetString("Commands_RatedUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rebuilds all bot commands (for admins).
        /// </summary>
        public static string Commands_RebuildCommands {
            get {
                return ResourceManager.GetString("Commands_RebuildCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update the leaderboard (for admins).
        /// </summary>
        public static string Commands_RefreshLeaderboard {
            get {
                return ResourceManager.GetString("Commands_RefreshLeaderboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add a user to the database (for admins).
        /// </summary>
        public static string Commands_RegisterUser {
            get {
                return ResourceManager.GetString("Commands_RegisterUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change the rating value of the user in the database (for admins).
        /// </summary>
        public static string Commands_SetUsersScore {
            get {
                return ResourceManager.GetString("Commands_SetUsersScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Immediately starts the tournament starting with the checkin.
        /// </summary>
        public static string Commands_Start {
            get {
                return ResourceManager.GetString("Commands_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Find out your status in this activity.
        /// </summary>
        public static string Commands_Status {
            get {
                return ResourceManager.GetString("Commands_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Count the game (for tests).
        /// </summary>
        public static string Commands_SubmitGame {
            get {
                return ResourceManager.GetString("Commands_SubmitGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Displays the current time and the remaining time to the next event.
        /// </summary>
        public static string Commands_Time {
            get {
                return ResourceManager.GetString("Commands_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Output the schedule of all scheduled events.
        /// </summary>
        public static string Commands_Timeline {
            get {
                return ResourceManager.GetString("Commands_Timeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Output user information from the database (for admins).
        /// </summary>
        public static string Commands_User {
            get {
                return ResourceManager.GetString("Commands_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display a list of users in the database (for admins).
        /// </summary>
        public static string Commands_Users {
            get {
                return ResourceManager.GetString("Commands_Users", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Outputs the current tournament grid (for tests).
        /// </summary>
        public static string Commands_View {
            get {
                return ResourceManager.GetString("Commands_View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start voting.
        /// </summary>
        public static string Commands_Vote {
            get {
                return ResourceManager.GetString("Commands_Vote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start voting to add time.
        /// </summary>
        public static string Commands_VoteAddTime {
            get {
                return ResourceManager.GetString("Commands_VoteAddTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start voting to ban a user.
        /// </summary>
        public static string Commands_VoteBan {
            get {
                return ResourceManager.GetString("Commands_VoteBan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Begin voting to exclude a user from the tournament.
        /// </summary>
        public static string Commands_VoteKick {
            get {
                return ResourceManager.GetString("Commands_VoteKick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get/Remove &apos;Waiting for Tournaments&apos; role.
        /// </summary>
        public static string Commands_Wait {
            get {
                return ResourceManager.GetString("Commands_Wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; The next stage begins! Generating brackets....
        /// </summary>
        public static string Event_NextStageStarted {
            get {
                return ResourceManager.GetString("Event_NextStageStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attention! {0} AutoCup {1} Checkin phase has begun.\nAll participants must run the __**/checkin**__ command on the activity channel to confirm their participation.\nThe checkout is open until the end of the checkout, but new participants do not need to call the */checkin** command, the */play* command is enough..
        /// </summary>
        public static string Events_ActivityCheckinStarted {
            get {
                return ResourceManager.GetString("Events_ActivityCheckinStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на __**{0} successfully completed**__\n=========================================================.
        /// </summary>
        public static string Events_ActivityCompleted {
            get {
                return ResourceManager.GetString("Events_ActivityCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A winner is determined, but the tournament will not be counted, as it consists entirely of technical defeats. At least one game must be played..
        /// </summary>
        public static string Events_ActivityNotCounted {
            get {
                return ResourceManager.GetString("Events_ActivityNotCounted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The activity *{0} AutoCup {1}* begins!.
        /// </summary>
        public static string Events_ActivityStarted {
            get {
                return ResourceManager.GetString("Events_ActivityStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на _**{0}**__ is safely finished!\nCongratulations to the player named __**{1}**__. We wish the rest of you good luck in the next events!.
        /// </summary>
        public static string Events_ArchiveHeader {
            get {
                return ResourceManager.GetString("Events_ArchiveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Grid:.
        /// </summary>
        public static string Events_Bracket {
            get {
                return ResourceManager.GetString("Events_Bracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; **Matches to be played in the current stage of the event:**.
        /// </summary>
        public static string Events_CurrentStageMatches {
            get {
                return ResourceManager.GetString("Events_CurrentStageMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; Quick vote on an incomplete match. Who should be awarded a technical defeat?.
        /// </summary>
        public static string Events_FastVotingForUncompletedMatch {
            get {
                return ResourceManager.GetString("Events_FastVotingForUncompletedMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на __**{0} completed without results**__\n==================================================================================================\n.
        /// </summary>
        public static string Events_FinishedWithNoResults {
            get {
                return ResourceManager.GetString("Events_FinishedWithNoResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The first stage of the event has begun. There is a __**{0}** countdown to the end of the stage..
        /// </summary>
        public static string Events_FirstStageStarted {
            get {
                return ResourceManager.GetString("Events_FirstStageStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full grid:.
        /// </summary>
        public static string Events_FullBracket {
            get {
                return ResourceManager.GetString("Events_FullBracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ---\n Hosts:.
        /// </summary>
        public static string Events_Hosts {
            get {
                return ResourceManager.GetString("Events_Hosts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The leaderboard has been updated..
        /// </summary>
        public static string Events_LeaderboardHasBeenUpdated {
            get {
                return ResourceManager.GetString("Events_LeaderboardHasBeenUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --- __**Leaderboard**__ ---.
        /// </summary>
        public static string Events_LeaderBoardHeader {
            get {
                return ResourceManager.GetString("Events_LeaderBoardHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Moscow time {0}\nThe next event &apos;**{1}**&apos; will occur in **{2}**..
        /// </summary>
        public static string Events_NextEvent {
            get {
                return ResourceManager.GetString("Events_NextEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No events today :).
        /// </summary>
        public static string Events_NoTournamentsToday {
            get {
                return ResourceManager.GetString("Events_NoTournamentsToday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; Played Matches:.
        /// </summary>
        public static string Events_PlayedMatches {
            get {
                return ResourceManager.GetString("Events_PlayedMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ---\nOn the resting bench this time:.
        /// </summary>
        public static string Events_Relaxing {
            get {
                return ResourceManager.GetString("Events_Relaxing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на **Don&apos;t forget to use DowStats and an attached Steam account, otherwise the match won&apos;t count!**.
        /// </summary>
        public static string Events_RulesRemind {
            get {
                return ResourceManager.GetString("Events_RulesRemind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The only match in this stage has not yet been completed. The completion of this stage has been postponed for __**5 minutes.**__.
        /// </summary>
        public static string Events_SingleMatchNotFinished {
            get {
                return ResourceManager.GetString("Events_SingleMatchNotFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The stage has been successfully completed! The next stage will begin after a {0} minute break..
        /// </summary>
        public static string Events_StageCompleted {
            get {
                return ResourceManager.GetString("Events_StageCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Half or more matches are still to be played. The completion of the stage has been postponed for __**5 minutes**__..
        /// </summary>
        public static string Events_StageCompletionDelayed {
            get {
                return ResourceManager.GetString("Events_StageCompletionDelayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A new stage has begun. There is a __**{0}**__ countdown to the end of the stage..
        /// </summary>
        public static string Events_StageTimeInfo {
            get {
                return ResourceManager.GetString("Events_StageTimeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; A technical defeat was awarded to the player with the nickname **{0}**..
        /// </summary>
        public static string Events_TechLoseToPlayer {
            get {
                return ResourceManager.GetString("Events_TechLoseToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Event has been cancelled, because there are not enough participants. Next event will start when {0} participants are registered again..
        /// </summary>
        public static string Events_TournamentCancelledNoPlayers {
            get {
                return ResourceManager.GetString("Events_TournamentCancelledNoPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на At the moment, the activity cannot be started because there are not enough participants.\nMinimum number of participants is 4.\nThe list of registered participants has been reset..
        /// </summary>
        public static string Events_UnableToStartNoPlayers {
            get {
                return ResourceManager.GetString("Events_UnableToStartNoPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The voting result is not accepted because the match has been completed..
        /// </summary>
        public static string Events_VotingCancelledCauseMatchFinished {
            get {
                return ResourceManager.GetString("Events_VotingCancelledCauseMatchFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Voting is complete..
        /// </summary>
        public static string Events_VotingHasBeenEnded {
            get {
                return ResourceManager.GetString("Events_VotingHasBeenEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; Voting result is not accepted, because the votes are divided equally, or no one voted.\nBut still need to make a decision, so the technical defeat is given to the player at the discretion of the bot..
        /// </summary>
        public static string Events_VotingResultNotDefined {
            get {
                return ResourceManager.GetString("Events_VotingResultNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A winner has been determined!.
        /// </summary>
        public static string Events_WeGotWinner {
            get {
                return ResourceManager.GetString("Events_WeGotWinner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The following event was forced..
        /// </summary>
        public static string ForceEvent_Done {
            get {
                return ResourceManager.GetString("ForceEvent_Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; There are no scheduled events right now..
        /// </summary>
        public static string ForceEvent_NoEvents {
            get {
                return ResourceManager.GetString("ForceEvent_NoEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No one has registered yet, but you might be the first :).
        /// </summary>
        public static string Info_NobodyRegisteredMessage {
            get {
                return ResourceManager.GetString("Info_NobodyRegisteredMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Registered participants: {0}.
        /// </summary>
        public static string Info_RegisteredPlayers {
            get {
                return ResourceManager.GetString("Info_RegisteredPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tournament type: {0}.
        /// </summary>
        public static string Info_TournamentType {
            get {
                return ResourceManager.GetString("Info_TournamentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The player has already been banned..
        /// </summary>
        public static string KickPlayer_AlreadyBanned {
            get {
                return ResourceManager.GetString("KickPlayer_AlreadyBanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The player has already been excluded from the activity by the administration..
        /// </summary>
        public static string KickPlayer_AlreadyKickedByAdmin {
            get {
                return ResourceManager.GetString("KickPlayer_AlreadyKickedByAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The player has already left this activity..
        /// </summary>
        public static string KickPlayer_AlreadyLeftTheTournament {
            get {
                return ResourceManager.GetString("KickPlayer_AlreadyLeftTheTournament", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You cannot exclude a player from an activity in which he is not registered..
        /// </summary>
        public static string KickPlayer_ImposibleToKickNotRegisteredPlayer {
            get {
                return ResourceManager.GetString("KickPlayer_ImposibleToKickNotRegisteredPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You cannot leave the activity because you have already left it by voting..
        /// </summary>
        public static string KickPlayer_ImposibleToLeaveWhenAlreadyLeftByVoting {
            get {
                return ResourceManager.GetString("KickPlayer_ImposibleToLeaveWhenAlreadyLeftByVoting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Failed to exclude a player from activity..
        /// </summary>
        public static string KickPlayer_NotSucceded {
            get {
                return ResourceManager.GetString("KickPlayer_NotSucceded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; The user is not registered in the system..
        /// </summary>
        public static string KickPlayer_NoUser {
            get {
                return ResourceManager.GetString("KickPlayer_NoUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Player **{0}** has left the activity..
        /// </summary>
        public static string KickPlayer_PlayerLeftTournament {
            get {
                return ResourceManager.GetString("KickPlayer_PlayerLeftTournament", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You cannot leave the activity because you have been banned..
        /// </summary>
        public static string Leave_ImposibleToLeaveCauseBanned {
            get {
                return ResourceManager.GetString("Leave_ImposibleToLeaveCauseBanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You cannot leave the tournament because you have been excluded from it by the administration..
        /// </summary>
        public static string Leave_ImposibleToLeaveCauseKickedByAdmin {
            get {
                return ResourceManager.GetString("Leave_ImposibleToLeaveCauseKickedByAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You have left the current activity..
        /// </summary>
        public static string Leave_Successfull {
            get {
                return ResourceManager.GetString("Leave_Successfull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You cannot leave the activity because you have already left it by voting..
        /// </summary>
        public static string Leave_YouAreAlreadyKickedByVoting {
            get {
                return ResourceManager.GetString("Leave_YouAreAlreadyKickedByVoting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Activity has already begun, changes are not possible at this time..
        /// </summary>
        public static string Play_ActivityStarted {
            get {
                return ResourceManager.GetString("Play_ActivityStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; You are already registered for the activity.\nAccount on DowStats: {0} \nChosen race: {1}.
        /// </summary>
        public static string Play_AlreadyRegistered {
            get {
                return ResourceManager.GetString("Play_AlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; You are already registered for the activity, but race change is not possible at this time.\nAccount on DowStats: {0} \nChosen race: {1}.
        /// </summary>
        public static string Play_AlreadyRegisteredButNoChanges {
            get {
                return ResourceManager.GetString("Play_AlreadyRegisteredButNoChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Registration failed..
        /// </summary>
        public static string Play_Imposible {
            get {
                return ResourceManager.GetString("Play_Imposible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To participate in bot activities, you need to confirm the connection of your account with Steam. 
        ///To do this, first add your Steam account to the integration in your Discord account profile settings. 
        ///Make the integration publicly visible and then click the link below to confirm it. Only Steam accounts with at least 300 games played in total in the DowStats service can register for the activity..
        /// </summary>
        public static string Play_InstructionsMessage {
            get {
                return ResourceManager.GetString("Play_InstructionsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; Not enough games on your Steam account.\nOnly Steam accounts with at least **300 games played** total in the DowStats service can register for tournaments.\nReturn back when you have played more games :).
        /// </summary>
        public static string Play_NotEnoughGames {
            get {
                return ResourceManager.GetString("Play_NotEnoughGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; To register in the system, you need to attach your Steam account to your profile. Instructions are sent in personal messages..
        /// </summary>
        public static string Play_RegisterIntroMessage {
            get {
                return ResourceManager.GetString("Play_RegisterIntroMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; You were successfully logged into the activity.\nAccount on DowStats: {0} \nSelected race: {1}.
        /// </summary>
        public static string Play_Successfull {
            get {
                return ResourceManager.GetString("Play_Successfull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; You have been successfully registered and checked in for activity.\nAccount on DowStats: {0} \nSelected race: {1}.
        /// </summary>
        public static string Play_SuccessfullAndChekined {
            get {
                return ResourceManager.GetString("Play_SuccessfullAndChekined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No one is currently registered for the activity..
        /// </summary>
        public static string Players_NobodyRegistered {
            get {
                return ResourceManager.GetString("Players_NobodyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; A victory was counted for **{0}** in the match against **{1}**.\nGame link: {2}.
        /// </summary>
        public static string Scanner_MatchAccepted {
            get {
                return ResourceManager.GetString("Scanner_MatchAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The next event &apos;**{0}**&apos; will occur in **{1}**..
        /// </summary>
        public static string Time_NextEvent {
            get {
                return ResourceManager.GetString("Time_NextEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;&gt;&gt; Your time **&lt;t:{0}:t&gt;**\n Moscow time **{1}**.
        /// </summary>
        public static string Time_Time {
            get {
                return ResourceManager.GetString("Time_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; Activity won&apos;t bother you.
        /// </summary>
        public static string Wait_Disabled {
            get {
                return ResourceManager.GetString("Wait_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt; You will be notified when an activity begins.
        /// </summary>
        public static string Wait_Enabled {
            get {
                return ResourceManager.GetString("Wait_Enabled", resourceCulture);
            }
        }
    }
}
